{
  "name": "crunchbase",
  "version": "0.1.2",
  "description": "Node module that wraps the Crunchbase API",
  "main": "index.js",
  "scripts": {
    "test": "nodeunit test/"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/rgerard/node-crunchbase.git"
  },
  "keywords": [
    "crunchbase",
    "techcrunch",
    "api"
  ],
  "author": {
    "name": "Ryan Gerard"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/rgerard/node-crunchbase",
  "dependencies": {
    "request": ">= 0.0.1"
  },
  "devDependencies": {
    "nodeunit": ">= 0.0.1"
  },
  "readme": "# node-crunchbase: Easy wrapper around the CrunchBase API\n\nThis module is designed to be an easy-to-use wrapper around the CrunchBase API.  This module is designed to be used with node.js, but could be modified to be used directly in the browser as well.\n\n## Install\n\n<pre>\n  npm install crunchbase\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/rgerard/node-crunchbase.git\n  cd node-crunchbase\n  npm install\n</pre>\n\n\n## Simple Examples\n\n```javascript\nvar crunchbase = require('crunchbase');\n\n// Init the object with your API key\ncrunchbase.init(apikey);\n\n// Search for a company name\ncrunchbase.search('pickmoto', function(error, results) {\n if (!error) {\n    console.log(results) // Print the search results\n  }\n});\n```\n\n\n## Test\n\nI have written unit tests for these API calls using the <a href=\"https://github.com/caolan/nodeunit\">nodeunit</a> framework.\nThe unit tests make actual API calls, so be wary of your API call limit.\n\nTo run the unit tests:\n\n```\nnodeunit test/\n```\n\n\n## Documentation\n\nPlease refer to the <a href=\"http://developer.crunchbase.com/io-docs\">CrunchBase API documentation</a> for more detail on their API.\n\n* [init](#init)\n* [getEntity](#getEntity)\n* [getEntityList](#getEntityList)\n* [search](#search)\n* [getPosts](#getPosts)\n\n\n## CrunchBase API\n\n<a name=\"init\" />\n### init(apikey)\n\nInits the object with your API data, including your API key.\n\n__Arguments__\n\n* apikey - Your API key\n\n__Example__\n\n```js\n// Fetch the schedule for Week 1 of the NFL season\nvar crunchbase = require('crunchbase');\ncrunchbase.init(apikey);\n```\n\n---------------------------------------\n\n<a name=\"getEntity\" />\n### getEntity(entityType, name, callback)\n\nReturns information about the entity as a JSON object\n\n__Arguments__\n\n* entityType - Can be either company, person, financial-organization, product, or service-provider\n* name - The entity name to search for\n* callback(err, body) - A callback which is called after the API call has returned, or an error has occurred.\n\n__Example__\n\n```js\n// Fetch information about Dropbox\ncrunchbase.getEntity('company', 'dropbox', function(error, entityInfo) {\n if (!error) {\n    console.log(entityInfo);\n  }\n});\n```\n\n---------------------------------------\n\n<a name=\"getEntityList\" />\n### getEntityList(entityType, callback)\n\nReturns every entity of a certain type in the system as a JSON object\n\n__Arguments__\n\n* entityType - Can be either companies, people, financial-organizations, products, or service-providers\n* callback(err, body) - A callback which is called after the API call has returned, or an error has occurred.\n\n__Example__\n\n```js\n// Fetch every company in the system\ncrunchbase.getEntityList('company', function(error, allCompanies) {\n if (!error) {\n    console.log(allCompanies);\n  }\n});\n```\n\n---------------------------------------\n\n<a name=\"search\" />\n### search(query, callback)\n\nReturns search results as a JSON object\n\n__Arguments__\n\n* query - Parameter to search on\n* callback(err, body) - A callback which is called after the API call has returned, or an error has occurred.\n\n__Example__\n\n```js\n// Search for the company Xobni\ncrunchbase.search('xobni', function(error, xobniData) {\n if (!error) {\n    console.log(xobniData);\n  }\n});\n```\n\n---------------------------------------\n\n<a name=\"getPosts\" />\n### getPosts(entityType, name, firstName, lastName, callback)\n\nReturns the posts of a person in an entity as a JSON object\n\n__Arguments__\n\n* entityType - Can be either companies, people, financial-organizations, products\n* name - The entity name\n* firstName - The person's first name\n* lastName - The person's last name\n* callback(err, body) - A callback which is called after the API call has returned, or an error has occurred.\n\n__Example__\n\n```js\n// Fetch the posts for a company/person\ncrunchbase.getPosts('companies', 'dropbox', 'drew', 'houston', function(error, postsData) {\n if (!error) {\n    console.log(postsData);\n  }\n});\n```",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rgerard/node-crunchbase/issues"
  },
  "_id": "crunchbase@0.1.2",
  "dist": {
    "shasum": "5f4d695db0b9cd0170c52e37edbdae46a575bbd5"
  },
  "_from": "crunchbase@",
  "_resolved": "https://registry.npmjs.org/crunchbase/-/crunchbase-0.1.2.tgz"
}
